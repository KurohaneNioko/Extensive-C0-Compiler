delete:
            x1           *              #5               i  12
delete:
            x2           *              #9               i  36
Basic block info:
0    next: 1 2 
1  prev: 0 
2  prev: 0     next: 3 
3  prev: 2 
4
5
6
7
8    next: 9 
9  prev: 8 25     next: 10 26 
10  prev: 9     next: 11 
11  prev: 10 19     next: 12 20 
12  prev: 11     next: 13 
13  prev: 12     next: 14 19 
14  prev: 13     next: 15 16 
15  prev: 14     next: 16 
16  prev: 14 15     next: 17 18 
17  prev: 16     next: 18 
18  prev: 16 17     next: 19 
19  prev: 13 18     next: 11 
20  prev: 11     next: 21 25 
21  prev: 20     next: 22 
22  prev: 21 23     next: 23 24 
23  prev: 22     next: 22 
24  prev: 22     next: 25 
25  prev: 20 24     next: 9 
26  prev: 9     next: 27 
27  prev: 26 28     next: 28 29 
28  prev: 27     next: 27 
29  prev: 27     next: 30 
30  prev: 29 31     next: 31 32 
31  prev: 30     next: 30 
32  prev: 30     next: 33 
33  prev: 32 44     next: 34 45 
34  prev: 33     next: 35 
35  prev: 34 39     next: 36 40 
36  prev: 35     next: 37 
37  prev: 36     next: 38 39 
38  prev: 37     next: 39 
39  prev: 37 38     next: 35 
40  prev: 35     next: 41 44 
41  prev: 40     next: 42 43 
42  prev: 41     next: 43 
43  prev: 41 42     next: 44 
44  prev: 40 43     next: 33 
45  prev: 33 
46    next: 47 
47  prev: 46     next: 48 
48  prev: 47 

     factorial  func_begin               0               0   0
            %1           >               n               1   0
        RET_v0           +               1               0   1
             0         ret               0               0   1
            %1       label               0               0   2
            #1           -               n               1   2
     factorial        push              #1               0   2
     factorial        call               0               0   2
            #2           +          RET_v0               0   3
        RET_v0           *               n              #2   3
             0         ret               0               0   3
             0    func_end               0               0   4
           mod  func_begin               0               0   5
            #3           /               x               y   5
            #4           *              #3               y   5
             x           -               x              #4   5
        RET_v0           +               x               0   5
             0         ret               0               0   5
             0    func_end               0               0   6
          swap  func_begin               0               0   7
           str       print              ~1               0   7
           int       print               x               0   7
           str       print              ~2               0   7
           int       print               y               0   7
          temp           +               x               0   7
             x           +               y               0   7
             y           +            temp               0   7
           str       print              ~3               0   7
           int       print               x               0   7
           str       print              ~4               0   7
           int       print               y               0   7
             0    func_end               0               0   7
  complete_num  func_begin               0               0   8
             j           +             val               0   8
            %2       label               0               0   9
            %3          >=               j            1024   9
             n           +              -1               0  10
             s           +               j               0  10
             i           +               1               0  10
            %4       label               0               0  11
            %5          >=               i               j  11
            #5           /               j               i  12
           mod        push               j               0  12
           mod        push               i               1  12
           mod        call               0               0  12
            #6           +          RET_v0               0  13
            %6          !=              #6               0  13
             n           +               n               1  14
             s           -               s               i  14
            %7           <               n             128  14
           str       print              ~5               0  15
            %7       label               0               0  16
            %8          >=               n             128  16
             k         []=               n               i  17
            %8       label               0               0  18
            %6       label               0               0  19
             i           +               i               1  19
            %4        goto               0               0  19
            %5       label               0               0  20
            %9          !=               s               0  20
           str       print              ~6               0  21
           int       print               j               0  21
             i           +               0               0  21
           %10       label               0               0  22
           %11           >               i               n  22
           str       print              ~7               0  23
            #7         =[]               k               i  23
           int       print              #7               0  23
             i           +               i               1  23
           %10        goto               0               0  23
           %11       label               0               0  24
           str       print              ~8               0  24
            %9       label               0               0  25
             j           +               j               1  25
            %2        goto               0               0  25
            %3       label               0               0  26
           str       print              ~9               0  26
             a           +               0               0  26
             i           +               0               0  26
           %12       label               0               0  27
           %13          >=               i            1024  27
             b           *               a               i  28
             c           *               j               n  28
             a           *               a               i  28
            #8           +               a               b  28
             a           +              #8               c  28
             i           +               i               1  28
           %12        goto               0               0  28
           %13       label               0               0  29
             b           +               a               0  29
             i           +               0               0  29
           %14       label               0               0  30
           %15          >=               i            1024  30
             b           +               b               i  31
             i           +               i               1  31
           %14        goto               0               0  31
           %15       label               0               0  32
           str       print             ~10               0  32
           int       print               b               0  32
           str       print              ~9               0  32
             h           +               0               0  32
          leap           +               1               0  32
             m           +               2               0  32
           %16       label               0               0  33
           %17           >               m            1024  33
            k2           /               m               2  34
             i           +               2               0  34
           %18       label               0               0  35
           %19           >               i              k2  35
            #9           /               m               i  36
           mod        push               m               0  36
           mod        push               i               1  36
           mod        call               0               0  36
           #10           +          RET_v0               0  37
           %20          !=             #10               0  37
          leap           +               0               0  38
           %20       label               0               0  39
             i           +               i               1  39
           %18        goto               0               0  39
           %19       label               0               0  40
           %21          !=            leap               1  40
           str       print             ~11               0  41
           int       print               m               0  41
             h           +               h               1  41
           #11           /               h              10  41
            x2           *             #11              10  41
           %22          !=              x2               h  41
           str       print              ~8               0  42
           %22       label               0               0  43
           %21       label               0               0  44
          leap           +               1               0  44
             m           +               m               1  44
           %16        goto               0               0  44
           %17       label               0               0  45
           str       print             ~12               0  45
           int       print               h               0  45
             0    func_end               0               0  45
          main  func_begin               0               0  46
     factorial        push              10               0  46
     factorial        call               0               0  46
             n           +          RET_v0               0  47
           str       print             ~13               0  47
           int       print               n               0  47
          swap        push               5               0  47
          swap        push              10               1  47
          swap        call               0               0  47
  complete_num        push               2               0  48
  complete_num        call               0               0  48
Def-Use Web
====== complete_num ======
#10
37, 0
(37, 1) --> 

#11
41, 3
(41, 4) --> 

#5
12, 0


#6
13, 0
(13, 1) --> 

#7
23, 1
(23, 2) --> 

#8
28, 3
(28, 4) --> 

#9
36, 0


a
26, 2
(28, 0) --> (28, 2) --> (29, 1) --> 

28, 2
(28, 3) --> 
28, 4
(28, 0) --> (28, 2) --> (29, 1) --> 


b
28, 0
(28, 3) --> 
29, 1
(31, 0) --> (32, 2) --> 
31, 0
(31, 0) --> (32, 2) --> 

c
28, 1
(28, 4) --> 

h
32, 4
(41, 2) --> (45, 2) --> 
41, 2
(41, 3) --> (41, 5) --> (41, 2) --> 
(45, 2) --> (41, 2) --> (45, 2) --> 


i
10, 2
(11, 1) --> (12, 0) --> (12, 2) --> 
(14, 1) --> (17, 0) --> (19, 1) --> 
(19, 1) --> (17, 0) --> 
19, 1
(11, 1) --> (12, 0) --> (12, 2) --> 
(14, 1) --> (17, 0) --> (19, 1) --> 
(19, 1) --> (17, 0) --> 
21, 2
(22, 1) --> (23, 1) --> (23, 3) --> 

23, 3
(22, 1) --> (23, 1) --> (23, 3) --> 

26, 3
(27, 1) --> (28, 0) --> (28, 2) --> 
(28, 5) --> 
28, 5
(27, 1) --> (28, 0) --> (28, 2) --> 
(28, 5) --> 
29, 2
(30, 1) --> (31, 0) --> (31, 1) --> 

31, 1
(30, 1) --> (31, 0) --> (31, 1) --> 

34, 1
(35, 1) --> (36, 0) --> (36, 2) --> 
(39, 1) --> (39, 1) --> 
39, 1
(35, 1) --> (36, 0) --> (36, 2) --> 
(39, 1) --> (39, 1) --> 

j
8, 1
(9, 1) --> (10, 1) --> (11, 1) --> 
(12, 0) --> (12, 1) --> (21, 1) --> 
(25, 1) --> (25, 1) --> (28, 1) --> 

25, 1
(9, 1) --> (10, 1) --> (11, 1) --> 
(12, 0) --> (12, 1) --> (21, 1) --> 
(25, 1) --> (25, 1) --> (28, 1) --> 


k2
34, 0
(35, 1) --> 

leap
32, 5
(40, 1) --> 
38, 0
(40, 1) --> 
44, 1
(40, 1) --> 

m
32, 6
(33, 1) --> (34, 0) --> (36, 0) --> 
(36, 1) --> (41, 1) --> (44, 2) --> 
(44, 2) --> 
44, 2
(33, 1) --> (34, 0) --> (36, 0) --> 
(36, 1) --> (41, 1) --> (44, 2) --> 
(44, 2) --> 

n
10, 0
(14, 0) --> (22, 1) --> (28, 1) --> 
(28, 1) --> 
14, 0
(14, 2) --> (16, 1) --> (17, 0) --> 
(14, 0) --> (22, 1) --> (28, 1) --> 
(28, 1) --> (14, 0) --> (22, 1) --> 
(16, 1) --> (17, 0) --> 

s
10, 1
(14, 1) --> (20, 1) --> 
14, 1
(14, 1) --> (20, 1) --> (14, 1) --> 
(20, 1) --> 

val
8, 0
(8, 1) --> 

x2
41, 4
(41, 5) --> 

====== factorial ======
#1
2, 1
(2, 2) --> 

#2
3, 0
(3, 1) --> 

n
0, 0
(0, 1) --> (2, 1) --> (3, 1) --> 


====== main ======
n
47, 0
(47, 2) --> 

====== mod ======
#3
5, 1
(5, 2) --> 

#4
5, 2
(5, 3) --> 

x
5, 0
(5, 1) --> (5, 3) --> 
5, 3
(5, 4) --> 

y
5, 0
(5, 1) --> (5, 2) --> 

====== swap ======
temp
7, 5
(7, 7) --> 

x
7, 0
(7, 2) --> (7, 5) --> 
7, 6
(7, 9) --> 

y
7, 0
(7, 4) --> (7, 6) --> 
7, 7
(7, 11) --> 



Crash Graph
complete_num ======
#10:
    
#11:
    h  x2  
#5:
    i  j  
#6:
    
#7:
    i  
#8:
    a  b  c  
#9:
    i  m  
a:
    #8  b  c  i  
b:
    #8  a  i  
c:
    #8  a  j  n  
h:
    #11  x2  
i:
    #5  #7  #9  a  b  j  k2  m  n  s  
j:
    #5  c  i  n  s  val  
k2:
    i  m  
leap:
    
m:
    #9  i  k2  
n:
    c  i  j  
s:
    i  j  
val:
    j  
x2:
    #11  h  

factorial ======
#1:
    n  
#2:
    n  
n:
    #1  #2  

main ======
n:
    

mod ======
#3:
    #4  x  y  
#4:
    #3  x  y  
x:
    #3  #4  y  
y:
    #3  #4  x  

swap ======
temp:
    x  y  
x:
    temp  y  
y:
    temp  x  

string_12 : .asciiz "          The total is \n"
string_8 : .asciiz "          \n"
string_7 : .asciiz "  \n"
string_9 : .asciiz " ---------------------------------------------------------------          \n"
string_13 : .asciiz " 10! = \n"
string_5 : .asciiz " OVERFLOW!          \n"
string_3 : .asciiz " SWAP x = \n"
string_4 : .asciiz " SWAP y = \n"
string_11 : .asciiz " \n"
string_10 : .asciiz " b = \n"
string_6 : .asciiz " complete number: \n"
string_1 : .asciiz " x = \n"
string_2 : .asciiz " y = \n"
global:
          name|class|  type|  len|  def|       addr
  complete_num| void|  func|    1|   28|   ffffffff|
     factorial|  int|  func|    1|    3|   ffffffff|
          main| void|  func|    0|  126|   ffffffff|
       max_num|  int| const| 1024|    1|   ffffffff|
           mod|  int|  func|    2|    9|   ffffffff|
          swap| void|  func|    2|   15|   ffffffff|

complete_num:
          name|class|  type|  len|  def|       addr|reg
           #10|  int|   var|    0|  102|   ffffffff|  2
           #11|  int|   var|    0|  113|   ffffffff|  1
            #5|  int|   var|    0|   43|   ffffffff|  0
            #6|  int|   var|    0|   44|   ffffffff| 16
            #7|  int|   var|    0|   62|   ffffffff| 15
            #8|  int|   var|    0|   77|   ffffffff| 14
            #9|  int|   var|    0|  101|   ffffffff| 13
             a|  int|   var|    0|   33|   ffffffff| 12
             b|  int|   var|    0|   33|   ffffffff| 11
             c|  int|   var|    0|   33|   ffffffff| 10
             h|  int|   var|    0|   32|   ffffffff|  9
             i|  int|   var|    0|   31|   ffffffff|  8
             j|  int|   var|    0|   31|   ffffffff|  7
             k|  int| array|  128|   30|   ffffffff| -1
            k2|  int|   var|    0|   32|   ffffffff|  6
          leap|  int|   var|    0|   32|   ffffffff|  5
             m|  int|   var|    0|   32|   ffffffff|  4
             n|  int|   var|    0|   31|   ffffffff|  3
             s|  int|   var|    0|   31|   ffffffff|  2
           val|  int|  para|    0|   28|   ffffffff|  1
            x2|  int|   var|    0|   32|   ffffffff|  0
factorial:
          name|class|  type|  len|  def|       addr|reg
            #1|  int|   var|    0|    6|   ffffffff|  0
            #2|  int|   var|    0|    6|   ffffffff|  1
             n|  int|  para|    0|    3|   ffffffff|  2
mod:
          name|class|  type|  len|  def|       addr|reg
            #3|  int|   var|    0|   10|   ffffffff|  0
            #4|  int|   var|    0|   10|   ffffffff|  1
             x|  int|  para|    0|    9|   ffffffff|  2
             y|  int|  para|    1|    9|   ffffffff|  3
swap:
          name|class|  type|  len|  def|       addr|reg
          temp|  int|   var|    0|   16|   ffffffff|  0
             x|  int|  para|    0|   15|   ffffffff|  1
             y|  int|  para|    1|   15|   ffffffff|  2

main:
          name|class|  type|  len|  def|       addr|reg
             n|  int|   var|    0|  128|   ffffffff|  0
