const int a=100,MAX=10;
const char ch='M';
int x,y,z,t,dATa[10],i,m,n,_abc;
char c1,c2;

int add(int a, int b, int c, int d, int e ,int f){
    return (a+b+c+d+e+f);
}


char fool{
    return ('T');
}

int getabs(int x){
    if(x>0) return (x);
    if(x==0) return (0);
    else if(x!=0) return (-x);
}

int fibo(int n){
    if(n<3) return (1);
    else return (fibo(n-1) + fibo(n-2));
}

void test_strElement{
    printf("\n! ~}|{abcABC<=+-$%&*()/");
}

int test_charTypeTrans(char ch){
    return (ch+1);
}

int test_condition(int x){
    if(x-3*4+2*6) return (1);
    else{
        return (0);
    }
}

void call_fibo{
    ;
    scanf(m);
    t=fibo(m);
    printf("...fibo result is :",t);
}

void test_arrayindex{
    data[1]=100;
    data[2+3]=200;
    data[(8)]=400;
}

void test_arrayAssign{
    i=0;
    while(i<MAX){
    data[add(0,i-2,0,1,1,0)]=i+1;
    i=i+1;}    
}

int test_for{
    _abc=0-0;
    for(i=0;i<n;i=i+1){
        _abc=_abc+data[i];
    }
    return (_abc);
}
void test_bra_statement{
    {
    ;;;;;;;;;;;;;;
    }
}



void call_abs{
    scanf(m);
    t=getabs(m);
    printf("...abs is: ",t);
}

void MAIN(){
    int a;
    a=-99;
    x=003;
    y=-4;
    c1='T';
    z=x*y+a/x-(x+y)*a;
    i=test_charTypeTrans('r');
    t=add(x,y,z,i,add(x,0,0,y,0,0),0);
    printf(t);
    test_bra_statement;
    scanf(n);
    test_arrayindex;
    test_arrayAssign;
    if(n>0){
    if(test_for==(n*(n+1)/2)){
            printf("...for loop work well");
        }
        else printf("...for error");
    }
    else if(n==0){
    if(test_for==1){
            printf("...for loop work well");
         }
         else printf("...for error");
    }
    
    call_fibo;
    call_abs;
    y=--100;
    if(y==100)
    printf(fool);
    test_strElement;
    printf(test_condition(n));

    return;
}